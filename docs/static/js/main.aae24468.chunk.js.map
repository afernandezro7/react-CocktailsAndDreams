{"version":3,"sources":["context/CategoriasContext.js","context/RecetasContext.js","components/Formulario.js","components/Header.js","context/ModalContext.js","components/Receta.js","components/ListaRecetas.js","App.js","serviceWorker.js","index.js"],"names":["CategoriasContext","createContext","CategoriasProvider","props","useState","categorias","setCategorias","useEffect","a","axios","data","drinks","obtenerCategorias","Provider","value","children","RecetasContext","RecetasProvider","recetas","setRecetas","ingrediente","categoria","busqueda","buscarRecetas","consultar","setconsultar","url","consultarAPI","Formulario","useContext","setBusqueda","handleChange","target","name","className","onSubmit","e","preventDefault","trim","type","placeholder","onChange","map","strCategory","key","Header","ModalContext","ModalProvider","idreceta","setIdReceta","detallesreceta","setDetallesReceta","resultado","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","Receta","receta","modalStyles","open","setOpen","classes","handleOpen","strDrink","src","strDrinkThumb","alt","onClick","idDrink","Modal","onClose","style","strInstructionsES","strInstructions","info","ingredientes","i","cantidad","push","fila","mostrarIngredientes","ListaRecetas","length","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aae24468.chunk.js","sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\n\r\n\r\n// CREAR EL CONTEXT\r\nexport const CategoriasContext = createContext();\r\n\r\n// Provider es donde se encuentran las funciones y state\r\nconst CategoriasProvider = (props)=>{\r\n\r\n    //crear state del Context\r\n    const [categorias, setCategorias] = useState([])\r\n\r\n    // ejecutar llamado a la api\r\n    useEffect(() => {\r\n        \r\n        const obtenerCategorias = async () =>{\r\n            try {\r\n                const url = `https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list`\r\n                const categorias = await axios(url)\r\n    \r\n                setCategorias(categorias.data.drinks); \r\n            } catch (error) {\r\n                setCategorias([])\r\n            }\r\n           \r\n        }\r\n\r\n        obtenerCategorias()\r\n    }, [])\r\n\r\n    return(\r\n        <CategoriasContext.Provider\r\n            value={{\r\n                categorias\r\n            }}\r\n        >\r\n            {props.children}\r\n        </CategoriasContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CategoriasProvider;\r\n\r\n\r\n","import React, { createContext, useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const RecetasContext = createContext();\r\n\r\nconst RecetasProvider = props =>{\r\n\r\n    const [recetas, setRecetas] = useState([])\r\n    const [busqueda, buscarRecetas] = useState({\r\n        ingrediente: '',\r\n        categoria: ''\r\n    })\r\n    const [consultar, setconsultar] = useState(false)\r\n\r\n    const {ingrediente, categoria} = busqueda\r\n    \r\n    useEffect(() => {\r\n        if(consultar){\r\n\r\n            const consultarAPI = async()=>{\r\n                const url=`https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${ingrediente}&c=${categoria}`;\r\n                \r\n                const recetas = await axios(url)\r\n                setRecetas(recetas.data.drinks);\r\n            }\r\n            consultarAPI()\r\n        }\r\n        setconsultar(false)\r\n        // eslint-disable-next-line\r\n    }, [busqueda])\r\n\r\n\r\n    return(\r\n        <RecetasContext.Provider\r\n            value={{\r\n                recetas,\r\n                buscarRecetas,\r\n                setconsultar\r\n            }}\r\n        >\r\n            {props.children}\r\n        </RecetasContext.Provider>\r\n    )\r\n}\r\n\r\nexport default RecetasProvider\r\n","import React, { useContext, useState } from 'react'\r\nimport { CategoriasContext } from '../context/CategoriasContext'\r\nimport { RecetasContext } from '../context/RecetasContext'\r\n\r\n\r\nconst Formulario = () => {\r\n\r\n\r\n    const { categorias } = useContext(CategoriasContext)\r\n    const {buscarRecetas, setconsultar}  = useContext(RecetasContext)\r\n    \r\n    const [busqueda, setBusqueda] = useState({\r\n        ingrediente: '', \r\n        categoria: '' \r\n    })\r\n    const{ ingrediente, categoria } = busqueda;\r\n\r\n    //Funcion para leer los contenidos\r\n    const handleChange =( {target} )=>{\r\n        setBusqueda({\r\n            ...busqueda,\r\n            [target.name]: target.value\r\n        })\r\n\r\n    }\r\n\r\n    // Controlar el submit del form\r\n    const handleSubmit = e=>{\r\n        e.preventDefault();\r\n        \r\n        // validar campos\r\n        if(categoria.trim()==='')return\r\n\r\n        //enviar datos al context Recetas\r\n        buscarRecetas(busqueda)\r\n        setconsultar(true)\r\n    }\r\n\r\n    return (\r\n        <form\r\n            className=\"col-md-12\"\r\n            onSubmit={ handleSubmit }\r\n        >\r\n            <fieldset className=\"text-center\">\r\n                <legend>Buscar bebidas por categor√≠a o por ingrdientes</legend>\r\n            </fieldset>\r\n\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-md-4\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"ingrediente\"\r\n                        placeholder=\"Buscar por Ingredientes\"\r\n                        onChange={ handleChange }\r\n                        value= { ingrediente }\r\n                    />\r\n                </div>                   \r\n                <div className=\"col-md-4\">\r\n                    <select\r\n                        className=\"form-control\"\r\n                        name=\"categoria\"\r\n                        onChange={ handleChange }\r\n                        value= { categoria }\r\n                    >\r\n                        <option value=\"\">-- Selecciona Categor√≠a --</option>\r\n                        {categorias.map( ({strCategory}) => (\r\n                            <option \r\n                                key={strCategory} \r\n                                value={strCategory}\r\n                            >\r\n                                {strCategory}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </div>                   \r\n                <div className=\"col-md-4\">\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-block btn-primary\"\r\n                        value=\"Buscar Bebidas\"\r\n                        \r\n                    />\r\n                </div>                   \r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Formulario\r\n","import React from 'react'\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"bg-alert\">\r\n            <h1>Busca Recetas de Bebidas</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default Header\r\n","import React, { createContext, useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\n\r\n\r\n//crear context\r\nexport const ModalContext = createContext();\r\n \r\n\r\nconst ModalProvider= props =>{\r\n    // state de la receta seleccionada\r\n    const [idreceta, setIdReceta] = useState(null)\r\n    const [detallesreceta, setDetallesReceta] = useState({})\r\n\r\n    useEffect(() => {\r\n        if(!idreceta)return;\r\n\r\n        const consultarAPI= async()=>{\r\n\r\n            const url= `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idreceta}`;\r\n\r\n            const resultado = await axios(url)\r\n\r\n            setDetallesReceta(resultado.data.drinks[0]);\r\n        }\r\n        consultarAPI()\r\n\r\n    }, [idreceta])\r\n\r\n    return(\r\n        <ModalContext.Provider\r\n            value={{\r\n                detallesreceta,\r\n                setIdReceta,\r\n                setDetallesReceta\r\n            }}\r\n        >\r\n            { props.children }\r\n        </ModalContext.Provider>\r\n    )\r\n}\r\n\r\nexport default ModalProvider;","import React, { useContext, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { ModalContext } from '../context/ModalContext'\r\n\r\n/*Materia UI */\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50 ;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 450,\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n/*FUNCTIONAL COMPONENT */\r\nconst Receta = ({receta}) => {\r\n    \r\n    //Configuraci√≥n del modal de material ui\r\n    const [ modalStyles ] = useState(getModalStyle)\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const classes = useStyles()\r\n  \r\n    //extraer los valores del context\r\n    const { detallesreceta, setIdReceta, setDetallesReceta } = useContext(ModalContext)\r\n    \r\n    \r\n    \r\n    // manejar el click\r\n    const handleClick = () =>{\r\n        setIdReceta(receta.idDrink);\r\n        handleOpen()      \r\n    }\r\n\r\n    // Manejar abrir y cerrar Modal\r\n    const handleOpen = () =>{\r\n        setOpen(true)\r\n    }\r\n    const handleClose = ()=>{\r\n        setOpen(false)\r\n\r\n        //reinicio  los state del modalContext a su estado inicial\r\n        setIdReceta(null);\r\n        setDetallesReceta({})\r\n    }\r\n\r\n    //muestra y formatea los ingredientes de la receta\r\n    const mostrarIngredientes = info =>{\r\n        let ingredientes = []\r\n        for (let i = 1; i < 16; i++) {\r\n\r\n            const ingrediente = info[`strIngredient${i}`];\r\n            const cantidad = info[`strMeasure${i}`];\r\n\r\n\r\n            if(ingrediente){\r\n                ingredientes.push(                    \r\n                    <li>{ingrediente}---{cantidad}</li>\r\n                )\r\n            }\r\n            \r\n        }\r\n\r\n        return (\r\n            ingredientes.map( fila =>(fila))\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"col-md-4 mb-3\">\r\n            <div className=\"card\">\r\n                <h2 className=\"card-header\">{receta.strDrink}</h2>\r\n\r\n                <img \r\n                    src={receta.strDrinkThumb}\r\n                    className=\"card-img-top\"\r\n                    alt={`Receta de ${receta.strDrink}`}\r\n                />\r\n\r\n                <div className=\"card-body\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-block btn-primary\" \r\n                        onClick= { handleClick } \r\n                         \r\n                    >Ver Receta</button>\r\n                    <Modal\r\n                        open = {open}\r\n                        onClose= { handleClose }\r\n                    >\r\n                        <div \r\n                            style= {modalStyles}\r\n                            className={classes.paper}\r\n                        >\r\n                            <h2>{detallesreceta.strDrink}</h2>\r\n                            <h3 className=\"mt-4 \">Instrucciones</h3>\r\n                            <p>\r\n                                {!detallesreceta.strInstructionsES \r\n                                    ? \r\n                                        detallesreceta.strInstructions\r\n                                    :\r\n                                        detallesreceta.strInstructionsES    \r\n                                }\r\n                            </p>\r\n\r\n                            <img \r\n                                className=\"img-fluid my-2\"\r\n                                src={detallesreceta.strDrinkThumb}\r\n                                alt={`Imagen de ${detallesreceta.strDrink}`}\r\n                            />\r\n                            <h3 className=\"mt-4 \">Ingredientes y Cantidades</h3>\r\n                            <ul>\r\n                                { mostrarIngredientes(detallesreceta) }\r\n                            </ul>\r\n                        </div>\r\n                    </Modal>\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nReceta.propTypes = {\r\n    receta: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Receta\r\n","import React, { useContext } from 'react'\r\nimport { RecetasContext } from '../context/RecetasContext'\r\nimport Receta from './Receta'\r\n\r\n\r\nconst ListaRecetas = () => {\r\n\r\n    \r\n    const {recetas} = useContext(RecetasContext)\r\n    \r\n    if(recetas.length===0)return null\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"mt-5\">Listado</h1>\r\n            <div className=\"row mt-5\">\r\n                {recetas.map( receta =>(\r\n                    <Receta\r\n                        key={ receta.idDrink }\r\n                        receta={receta}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ListaRecetas","import React from 'react';\nimport Formulario from './components/Formulario';\nimport Header from './components/Header';\nimport ListaRecetas from './components/ListaRecetas';\n\nimport CategoriasProvider from './context/CategoriasContext';\nimport RecetasProvider from './context/RecetasContext';\nimport ModalProvider from './context/ModalContext';\n\n\n\n\nfunction App() {\n  return (\n    <CategoriasProvider>\n      <RecetasProvider>\n        <ModalProvider>\n            \n            <Header />\n            <div className=\"container mt-5\">\n            \n                <div className=\"row\">\n                  <Formulario />\n                </div>\n\n                <ListaRecetas/>\n            </div>\n\n        </ModalProvider>\n      </RecetasProvider>\n    </CategoriasProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}